<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  
  <log4net>
    <!--Setup for console logging-->
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <!--<filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="WARN" />
        <levelMax value="FATAL" />
      </filter>-->
      <!--Filter to match a certain string/filter. Exect case matching only works with denyAllFilter below.-->
      <!--<filter type="log4net.Filter.StringMatchFilter">
        <stringToMatch value="Maintenance" />
      </filter>-->
      <!--Levelmatchfilter = self explenatory-->
      <!--
      <filter type="log4net.Filter.LevelMatchFilter">
        <levelToMatch value="Error" />
      </filter>
      <filter type="log4net.Filter.LevelMatchFilter">
        <levelToMatch value="Debug" />
      </filter> -->
      <!-- Order in filter is important, if place this deny filter above Maintanance there will be no results in console-->
      <!--<filter type="log4net.Filter.DenyAllFilter" /> -->
      <layout type="log4net.Layout.PatternLayout">
        <!--%1.150message% the . is important. Part after the dot will trim the length of the message and remove anything bevore. (maximum length)-->
        <!--the part bofore the . is the minimum lenght. and wil trim everything before the message-->
        <!-- the - bevore 1.150 is a space delimiter.-->
        <!--<conversionPattern value="Level - %level%newlineMessage - %-1.150message%newlineUTC Date - %utcdate{ABSOLUTE}%newlineDate - %date{ABSOLUTE}%newlineTimestamp - %timestamp%newlineIdentity - %identity%newlineUsername - %username%newlineLocation - %location%newlineLine number - %line%newlineMethod - %method%newline" />-->
        <!--%property{..} refering to property set in whatever class or file. In this case program.cs-->
        <conversionPattern value="%property{counter} - %message%newline" />
      </layout>
    </appender>

    <!--Setup for file logging-->
    <appender name="FileAppender" type="log4net.Appender.FileAppender">
      <file value="C:\Logs\MyLogFile.txt" />
      <appendToFile value="true" />
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date{ABSOLUTE} [%logger] %level - %message%newline%exception" />
      </layout>
    </appender>

    <!--Setup for rolling file logging (file logging with properties and setup)-->
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="C:/Logs/RollingFileLog.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maximumFileSize value="10MB" />
      <maxSizeRollBackups value="5" />
      <staticLogFileName value="true" />
      
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date{ABSOLUTE} [%logger] %level - %message%newline%exception" />
      </layout>
    </appender>

    <!--Setup for database logging-->
    <appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">
      <bufferSize value="1" />
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <connectionString value="Data Source=(localdb)\MSSQLLocalDB;Initial Catalog=Log4netTestApplicationDB;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False" />
      <commandText value="dbo.procLog_Insert" />
      <commandType value="StoredProcedure" />
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <parameter>
        <parameterName value="@log_thread" />
        <dbType value="String" />
        <size value="50" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_level" />
        <dbType value="String" />
        <size value="50" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_source" />
        <dbType value="String" />
        <size value="300" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_message" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@exception" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.ExceptionLayout" />
      </parameter>
    </appender>

    <!--Define logger below to be enabled-->
    <root>
      <level value="FATAL" />
      <appender-ref ref="ConsoleAppender" />
      <!--<appender-ref ref="FileAppender" />
      <appender-ref ref="RollingFileAppender" />
      <appender-ref ref="AdoNetAppender" />-->
    </root>
  </log4net> 
  
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />
    </startup>
</configuration>